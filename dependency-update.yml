name: Dependency Updates

on:
  schedule:
    # Run dependency updates weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Update Dependencies
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cp enhanced-package.json package.json
        npm ci

    - name: Check for outdated dependencies
      id: outdated
      run: |
        npm outdated --json > outdated.json || true
        if [ -s outdated.json ]; then
          echo "has_updates=true" >> $GITHUB_OUTPUT
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
        fi

    - name: Update dependencies
      if: steps.outdated.outputs.has_updates == 'true'
      run: |
        # Update patch and minor versions
        npm update
        
        # Check for major version updates
        npx npm-check-updates -u --target minor
        npm install

    - name: Run tests after update
      if: steps.outdated.outputs.has_updates == 'true'
      run: |
        npm test
        npm run lint

    - name: Generate update summary
      if: steps.outdated.outputs.has_updates == 'true'
      id: summary
      run: |
        echo "SUMMARY<<EOF" >> $GITHUB_OUTPUT
        echo "## Dependency Updates" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "The following dependencies have been updated:" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        
        # Compare package.json changes
        git diff --name-only | grep package.json && {
          echo "### Updated packages:" >> $GITHUB_OUTPUT
          git diff package.json | grep "^+" | grep -v "^+++" | sed 's/^+/- /' >> $GITHUB_OUTPUT
        } || echo "No package.json changes detected" >> $GITHUB_OUTPUT
        
        echo "" >> $GITHUB_OUTPUT
        echo "### Test Results:" >> $GITHUB_OUTPUT
        echo "‚úÖ All tests passed" >> $GITHUB_OUTPUT
        echo "‚úÖ Linting passed" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      if: steps.outdated.outputs.has_updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: automated dependency updates'
        body: |
          ${{ steps.summary.outputs.SUMMARY }}
          
          ## Changes
          - Updated npm dependencies to latest compatible versions
          - All tests and linting checks passed
          
          ## Review Notes
          - Please review the changes carefully
          - Check for any breaking changes in updated packages
          - Verify that all functionality works as expected
          
          This PR was created automatically by the dependency update workflow.
        branch: chore/dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
          chore

  # Security Updates
  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cp enhanced-package.json package.json
        npm ci

    - name: Check for security vulnerabilities
      id: audit
      run: |
        npm audit --audit-level moderate --json > audit.json || true
        if [ -s audit.json ] && [ "$(cat audit.json | jq '.vulnerabilities | length')" -gt 0 ]; then
          echo "has_vulnerabilities=true" >> $GITHUB_OUTPUT
        else
          echo "has_vulnerabilities=false" >> $GITHUB_OUTPUT
        fi

    - name: Fix security vulnerabilities
      if: steps.audit.outputs.has_vulnerabilities == 'true'
      run: |
        npm audit fix --force
        
        # If audit fix doesn't resolve all issues, try manual updates
        npm audit --json | jq -r '.vulnerabilities | keys[]' | while read package; do
          npm update "$package" || true
        done

    - name: Verify fixes
      if: steps.audit.outputs.has_vulnerabilities == 'true'
      run: |
        npm audit --audit-level moderate
        npm test
        npm run lint

    - name: Generate security update summary
      if: steps.audit.outputs.has_vulnerabilities == 'true'
      id: security_summary
      run: |
        echo "SECURITY_SUMMARY<<EOF" >> $GITHUB_OUTPUT
        echo "## Security Updates" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "üîí **Security vulnerabilities have been addressed**" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Fixed Vulnerabilities:" >> $GITHUB_OUTPUT
        npm audit --json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity) severity"' >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Verification:" >> $GITHUB_OUTPUT
        echo "‚úÖ Security audit passed" >> $GITHUB_OUTPUT
        echo "‚úÖ All tests passed" >> $GITHUB_OUTPUT
        echo "‚úÖ Linting passed" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Security PR
      if: steps.audit.outputs.has_vulnerabilities == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'security: fix vulnerabilities'
        title: 'üîí security: automated security updates'
        body: |
          ${{ steps.security_summary.outputs.SECURITY_SUMMARY }}
          
          ## ‚ö†Ô∏è Important
          This PR addresses security vulnerabilities found in dependencies.
          Please review and merge as soon as possible.
          
          ## Changes
          - Updated packages with security vulnerabilities
          - Verified all tests and linting still pass
          
          This PR was created automatically by the security update workflow.
        branch: security/vulnerability-fixes
        delete-branch: true
        labels: |
          security
          automated
          high-priority

  # Notify about updates
  notify:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [update-dependencies, security-updates]
    if: always()

    steps:
    - name: Notify about dependency updates
      if: needs.update-dependencies.result == 'success'
      run: |
        echo "Dependency update PR created successfully"
        # Add notification logic here (Slack, Discord, etc.)

    - name: Notify about security updates
      if: needs.security-updates.result == 'success'
      run: |
        echo "Security update PR created successfully"
        # Add urgent notification logic here (Slack, Discord, etc.)

